x Setup dev enviroment.
x Get and setup Bootstrap.
x Find out: Which html5 tags to use for layout? <div> stands for division, which is good for the Bootstrap grid.
x Create header layout with Bootstrap.
x Create footer layout (and styling) with Bootstrap.
x Create layout for <main> and <aside>.
    x Create layout and styling for product card using Bootstrap.
    x Create layout and styling for list of orders.
    * Change layout of main content area. Use a nested column layout.
* Finetune misc. bugs in responsive layout.
    * Move the button and price tag to the bottom of the cards.
    x On wide mobile view, the cards' title, description, button, and price fits on one line. Make it so they don't.
x Implement Babel in gulp.
    - Install Babel: npm install --save-dev gulp-babel babel-core babel-preset-env
* Implement JavaScript (ECMAScript 6).
    x Create a function that inserts a card in the DOM, populated with content.
    x Expand function to loop through array of content.
* Import product data from external document.
    x Create a javascript class for the product.
    x Create an object from the class, with data from a variable holding json data.
    x Create javascript function to go over json object, and create objects from it.
x Make JS responsible for displaying how many orders there is in the orders list.
    x Create function that counts how many rows there is in the orders list.
    x Create a function that updates the 'pill' with the counted number of orders.
* Create order class.
    x Create order object when a 'Bestil' btn is clicked.
    x Add order obj to order catalog.
    x Call the displayOrderCount() when a 'Bestil' btn is clicked.
    * Calculate and display the new order sum total when a new order has been added.
* Store the contents of the order catalog on the computer.
    x Decide whether to use local or session storage.
    - Use localStorage. It would be very annoying to lose your carefully selected coffee orders by mistakenly closing the tab.
    * When adding an order to the order catalog, at the same time add it to storage.
* Make JS responsible for tallying up.
    * Create a function that adds all the price value-pairs in storage together, and returns the result.
    * Create a function that displays the calculated sum.

x Move script tags to head.

---

Ting jeg ikke ved...
- Hvad bliver der af objekterne i min for-løkke, efter de er brugt til a lave mit user interface? Ligger de stadigvæk i hukommelsen, eller...?
- Hvordan implementerer jeg 'seperation of concerns'?
- Hvordan tager jeg hensyn til ES2015 hoisting?
